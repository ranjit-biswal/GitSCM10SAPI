<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="5" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="81553" started-at="2021-08-09T06:37:21Z" finished-at="2021-08-09T06:38:43Z">
    <groups>
      <group name="cucumber">
        <method signature="TestRunner.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@5e5792a0]" name="feature" class="runner.TestRunner"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Test" duration-ms="81553" started-at="2021-08-09T06:37:21Z" finished-at="2021-08-09T06:38:43Z">
      <class name="runner.TestRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.TestRunner@5e5792a0]" name="setUpClass" is-config="true" duration-ms="7394" started-at="2021-08-09T06:37:21Z" finished-at="2021-08-09T06:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@5e5792a0]" name="feature" duration-ms="16031" started-at="2021-08-09T06:37:29Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2021-08-09T06:37:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validating Create Connect Me program type from 10S SCM API]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@5e5792a0]" name="feature" duration-ms="4452" started-at="2021-08-09T06:37:45Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2021-08-09T06:37:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validating Login Api with UserID and Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@5e5792a0]" name="feature" duration-ms="3811" started-at="2021-08-09T06:37:50Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2021-08-09T06:37:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validating the LoginHelp API Functionality works]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@5e5792a0]" name="feature" duration-ms="6298" started-at="2021-08-09T06:37:53Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2021-08-09T06:38:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validating User is able to logout from the application]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@5e5792a0]" name="feature" duration-ms="43187" started-at="2021-08-09T06:38:00Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2021-08-09T06:38:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Add and update outage and validate if the outage inserted and updated successfully.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.TestRunner@5e5792a0]" name="tearDownClass" is-config="true" duration-ms="45" started-at="2021-08-09T06:38:43Z" finished-at="2021-08-09T06:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
